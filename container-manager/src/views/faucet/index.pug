head
  meta(charset='utf-8')
  title Subnet Faucet
  style
    include ./pure-min.css
    include ./custom.css


body()
  center
    h1 Subnet Faucet

  form.pure-form.pure-form-aligned#myForm(action="/faucet_subnet" method="get")
    fieldset
      //- center
      //-   h4#source Source Wallet: 
      .pure-control-group 
        label() Destination Address
        input.pure-input-1-3#text-dest(type='text' placeholder='0x1111111111111111111111111111111111111111' name="text-dest")
      .pure-control-group
        label() Amount
        input#text-amount(type='number' placeholder='10000000' value='10000000' name="text-amount")

    center
    .pure-controls
      button.pure-button.pure-button-primary(type='button' onclick="submitGet()") Submit

    #final
      #result
      #error

script.
  function genAddress(){
    fetch('/address')
      .then(response => response.json())
        .then(data => {
          document.getElementById("address-gen-pub").innerHTML="Address: "+data["publicKey"]
          document.getElementById("address-gen-pk").innerHTML="Private Key: "+data["privateKey"]
          })
        .catch(error => {
          console.error('Error:', error);
          document.getElementById("address-gen-pub").innerHTML="Error Generating Address"
          document.getElementById("address-gen-pk").innerHTML="Error Generating Address"
          });
  }

  function submitGet(){
    var dest = document.getElementById("text-dest").value
    var amount = document.getElementById("text-amount").value
    var params = new URLSearchParams({dest: dest, amount: amount})
    errorDiv = document.getElementById("error") 
    resultDiv = document.getElementById("result") 
    resultDiv.innerHTML = "Submitting TX"
    errorDiv.innerHTML = ""
    fetch(`/faucet_subnet?${params}`)
      .then(response => response.json()).then(data => {
        if (data.success){
          display = 
          `
          Success
          <br>
          <br>To Wallet: ${data.destAddress}
          <br>Balance: ${data.destBalance}
          <br>TX Hash: ${data.txHash}
          `
          resultDiv.innerHTML=display
          errorDiv.innerHTML=""
          
        } else {
          resultDiv.innerHTML = ""
          errorDiv.innerHTML="Error: "+data.message
        }
      })
  }